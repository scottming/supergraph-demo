schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type DeliveryEstimates {
  estimatedDelivery: String
  fastestDelivery: String
}

type Product
  @join__owner(graph: PRODUCTS)
  @join__type(graph: PRODUCTS, key: "sku variation{id}")
  @join__type(graph: PRODUCTS, key: "sku package")
  @join__type(graph: PRODUCTS, key: "id")
  @join__type(graph: INVENTORY, key: "id")
{
  _resolveReference: Product @join__field(graph: PRODUCTS)
  createdBy: User @join__field(graph: PRODUCTS, provides: "totalProductsCreated")
  delivery(zip: String): DeliveryEstimates @join__field(graph: INVENTORY, requires: "dimensions{size weight}")
  dimensions: ProductDimension @join__field(graph: PRODUCTS)
  id: ID! @join__field(graph: PRODUCTS)
  package: String @join__field(graph: PRODUCTS)
  sku: String @join__field(graph: PRODUCTS)
  variation: ProductVariation @join__field(graph: PRODUCTS)
}

type ProductDimension {
  size: String
  weight: Float
}

type ProductVariation {
  id: ID!
}

type Query {
  allProducts: [Product] @join__field(graph: PRODUCTS)
  product(id: ID!): Product @join__field(graph: PRODUCTS)
}

type User
  @join__owner(graph: USERS)
  @join__type(graph: USERS, key: "email")
  @join__type(graph: PRODUCTS, key: "email")
{
  _resolveReference: User @join__field(graph: USERS)
  email: ID! @join__field(graph: USERS)
  name: String @join__field(graph: USERS)
  totalProductsCreated: Int @join__field(graph: USERS)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  INVENTORY @join__graph(name: "inventory" url: "http://127.0.0.1:4003")
  PRODUCTS @join__graph(name: "products" url: "http://127.0.0.1:4001")
  USERS @join__graph(name: "users" url: "http://127.0.0.1:4002")
}
